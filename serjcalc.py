# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SerjCalc.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
#from PyQt5.QtWidgets import QCheckBox, QWidget, QApplication
from saver import Saver
from settings import Settings
from kernel import Kernel
import csv
from random import randint





class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(375, 520)
        MainWindow.setStyleSheet("background-color: rgb(145, 185, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.cb = QtWidgets.QCheckBox(self.centralwidget)
        self.cb.move(10, 295)
        self.cb.stateChanged.connect(self.chek_limit_60)
        
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(171, 480, 151, 31))
        self.pushButton.setAutoFillBackground(False)
        self.pushButton.setStyleSheet("background-color: rgb(240, 240, 240);")
        self.pushButton.setObjectName("pushButton")

        self.ButtonCalculate = QtWidgets.QPushButton(self.centralwidget)
        self.ButtonCalculate.setGeometry(QtCore.QRect(10, 480, 151, 31))
        self.ButtonCalculate.setAutoFillBackground(False)
        self.ButtonCalculate.setStyleSheet("background-color: rgb(240, 240, 240);")
        self.ButtonCalculate.setObjectName("ButtonCalculate")

        self.lnput_part_length = QtWidgets.QLineEdit(self.centralwidget)
        self.lnput_part_length.setGeometry(QtCore.QRect(10, 320, 68, 22))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lnput_part_length.sizePolicy().hasHeightForWidth())
        self.lnput_part_length.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.lnput_part_length.setFont(font)
        self.lnput_part_length.setAutoFillBackground(False)
        self.lnput_part_length.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lnput_part_length.setInputMethodHints(QtCore.Qt.ImhFormattedNumbersOnly|QtCore.Qt.ImhNoPredictiveText|QtCore.Qt.ImhNoTextHandles)
        self.lnput_part_length.setInputMask("")
        self.lnput_part_length.setMaxLength(6)
        self.lnput_part_length.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lnput_part_length.setObjectName("lnput_part_length")
        self.lnput_part_length.setText('0')
        #self.lnput_part_length.setReadOnly(True)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(100, 320, 201, 22))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lnput_number_of_shtaketins = QtWidgets.QLineEdit(self.centralwidget)
        self.lnput_number_of_shtaketins.setGeometry(QtCore.QRect(10, 360, 68, 22))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lnput_number_of_shtaketins.sizePolicy().hasHeightForWidth())
        self.lnput_number_of_shtaketins.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.lnput_number_of_shtaketins.setFont(font)
        self.lnput_number_of_shtaketins.setAutoFillBackground(False)
        self.lnput_number_of_shtaketins.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lnput_number_of_shtaketins.setInputMethodHints(QtCore.Qt.ImhFormattedNumbersOnly|QtCore.Qt.ImhNoPredictiveText|QtCore.Qt.ImhNoTextHandles)
        self.lnput_number_of_shtaketins.setInputMask("")
        self.lnput_number_of_shtaketins.setMaxLength(6)
        self.lnput_number_of_shtaketins.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lnput_number_of_shtaketins.setObjectName("lnput_number_of_shtaketins")
        self.lnput_number_of_shtaketins.setText('0')
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(100, 360, 221, 22))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.group_gate_selection = QtWidgets.QGroupBox(self.centralwidget)
        self.group_gate_selection.setGeometry(QtCore.QRect(10, 10, 151, 81))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.group_gate_selection.setFont(font)
        self.group_gate_selection.setObjectName("group_gate_selection")
        self.radio_btn_old_gate = QtWidgets.QRadioButton(self.group_gate_selection)
        self.radio_btn_old_gate.setGeometry(QtCore.QRect(10, 20, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radio_btn_old_gate.setFont(font)
        self.radio_btn_old_gate.setObjectName("radio_btn_old_gate")
        self.radio_btn_new_gate = QtWidgets.QRadioButton(self.group_gate_selection)
        self.radio_btn_new_gate.setGeometry(QtCore.QRect(10, 50, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radio_btn_new_gate.setFont(font)
        self.radio_btn_new_gate.setObjectName("radio_btn_new_gate")
        self.group_layout_blanks = QtWidgets.QGroupBox(self.centralwidget)
        self.group_layout_blanks.setGeometry(QtCore.QRect(10, 135, 351, 151))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.group_layout_blanks.setFont(font)
        self.group_layout_blanks.setObjectName("group_layout_blanks")
        self.radioBtn_one_pack = QtWidgets.QRadioButton(self.group_layout_blanks)
        self.radioBtn_one_pack.setGeometry(QtCore.QRect(10, 15, 340, 18))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioBtn_one_pack.setFont(font)
        self.radioBtn_one_pack.setObjectName("radioBtn_one_pack")
        self.radioBtn_gate_up_down = QtWidgets.QRadioButton(self.group_layout_blanks)
        self.radioBtn_gate_up_down.setGeometry(QtCore.QRect(10, 40, 290, 18))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioBtn_gate_up_down.setFont(font)
        self.radioBtn_gate_up_down.setObjectName("radioBtn_gate_up_down")
        self.radioBtn_main_set = QtWidgets.QRadioButton(self.group_layout_blanks)
        self.radioBtn_main_set.setGeometry(QtCore.QRect(10, 65, 321, 18))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioBtn_main_set.setFont(font)
        self.radioBtn_main_set.setObjectName("radioBtn_main_set")
        self.radioBtn_second_set = QtWidgets.QRadioButton(self.group_layout_blanks)
        self.radioBtn_second_set.setGeometry(QtCore.QRect(10, 90, 280, 18))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioBtn_second_set.setFont(font)
        self.radioBtn_second_set.setObjectName("radioBtn_second_set")
        self.radioBtn_gate_set = QtWidgets.QRadioButton(self.group_layout_blanks)
        self.radioBtn_gate_set.setGeometry(QtCore.QRect(10, 115, 285, 18))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioBtn_gate_set.setFont(font)
        self.radioBtn_gate_set.setObjectName("radioBtn_gate_set")
        self.label_important_statements = QtWidgets.QLabel(self.centralwidget)
        self.label_important_statements.setGeometry(QtCore.QRect(165, 10, 195, 115))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_important_statements.setFont(font)
        self.label_important_statements.setStyleSheet("")
        self.label_important_statements.setScaledContents(True)
        self.label_important_statements.setAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignVCenter)
        self.label_important_statements.setWordWrap(True)
        self.label_important_statements.setObjectName("label_important_statements")
        self.label_famous_name = QtWidgets.QLabel(self.centralwidget)
        self.label_famous_name.setGeometry(QtCore.QRect(150, 115, 220, 18))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.label_famous_name.setFont(font)
        self.label_famous_name.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_famous_name.setObjectName("label_famous_name")

        self.label_lenght_gate = QtWidgets.QLabel(self.centralwidget)
        self.label_lenght_gate.setGeometry(QtCore.QRect(10, 390, 180, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_lenght_gate.setFont(font)
        self.label_lenght_gate.setStyleSheet("")
        self.label_lenght_gate.setScaledContents(True)
        self.label_lenght_gate.setAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignVCenter)
        self.label_lenght_gate.setWordWrap(True)
        self.label_lenght_gate.setObjectName("label_lenght_gate")

        self.label_lenght_railing = QtWidgets.QLabel(self.centralwidget)
        self.label_lenght_railing.setGeometry(QtCore.QRect(10, 410, 250, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_lenght_railing.setFont(font)
        self.label_lenght_railing.setStyleSheet("")
        self.label_lenght_railing.setScaledContents(True)
        self.label_lenght_railing.setAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignVCenter)
        self.label_lenght_railing.setWordWrap(True)
        self.label_lenght_railing.setObjectName("label_lenght_railing")

        self.label_detail_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_detail_13.setGeometry(QtCore.QRect(10, 430, 360, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_detail_13.setFont(font)
        self.label_detail_13.setStyleSheet("")
        self.label_detail_13.setScaledContents(True)
        self.label_detail_13.setAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignVCenter)
        self.label_detail_13.setWordWrap(True)
        self.label_detail_13.setObjectName("label_detail_13")

        



        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.file_name=""
        
        self.settings=Settings()
        self.kernel=Kernel(self)
        self.save=Saver(self)
        self.config={'btn_old_gate': False, 'btn_new_gate': False, 'Btn_one_pack': False, 
            'Btn_gate_up_down': False, 'Btn_main_set': False, 'Btn_second_set': False, 
            'Btn_gate_set': False}

        
        self.chek_radio_button_gate()
        self.chek_ButtonCalculate()
        self.chek_push_button()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Рахувальник"))
        self.label_detail_13.setText(_translate("MainWindow", "Довжина деталі №13 "))
        self.label_lenght_railing.setText(_translate("MainWindow", "Довжина перила до хвіртки "))
        self.label_lenght_gate.setText(_translate("MainWindow", "Довжина хвіртки "))
        self.ButtonCalculate.setText(_translate("MainWindow", "Розрахувати"))
        self.pushButton.setText(_translate("MainWindow", "Зберегти КП"))
        self.label.setText(_translate("MainWindow", "Довжина деталі, мм."))
        self.label_2.setText(_translate("MainWindow", "Кількість штакетин, шт."))
        self.group_gate_selection.setTitle(_translate("MainWindow", "Хвіртка"))
        self.radio_btn_old_gate.setText(_translate("MainWindow", "Стара хвіртка"))
        self.radio_btn_new_gate.setText(_translate("MainWindow", "Нова хвіртка"))
        self.group_layout_blanks.setTitle(_translate("MainWindow", "Розкладка"))
        self.radioBtn_one_pack.setText(_translate("MainWindow", "Верх,низ,під хвіртку,перило,хвіртка,№13"))
        self.radioBtn_gate_up_down.setText(_translate("MainWindow", "Хвіртка, верх та низ"))
        self.radioBtn_main_set.setText(_translate("MainWindow", "Верхи, низи, під хвіртку, повна загрузка"))
        self.radioBtn_second_set.setText(_translate("MainWindow", "Верхи й низи, повна загрузка"))
        self.radioBtn_gate_set.setText(_translate("MainWindow", "Хвіртки верх та низ, повна загрузка"))
        self.says_somesing_important()
        
        self.cb.setText(_translate("MainWindow", "Менше 60мм між штакетин"))

    def says_somesing_important(self):
        _translate = QtCore.QCoreApplication.translate
        randomiz=randint(0, 90)

        file_name='data/says.csv'
        with open(file_name) as f:
            reader=csv.reader(f)
            for i in range (90):
                row=next(reader)
                if i==randomiz:
                    self.label_important_statements.setText(_translate("MainWindow", row[0] ))
                    self.label_famous_name.setText(_translate("MainWindow", row[1]))


        
        

    def get_radio_btn_config (self):
        if self.radio_btn_old_gate.isChecked():
            self.config['btn_old_gate']= True
        if self.radio_btn_new_gate.isChecked():
            self.config['btn_new_gate']= True
        if self.radioBtn_one_pack.isChecked():
            self.config['Btn_one_pack']= True
        if self.radioBtn_gate_up_down.isChecked():
            self.config['Btn_gate_up_down']= True
        if self.radioBtn_main_set.isChecked():
            self.config['Btn_main_set']= True
        if self.radioBtn_second_set.isChecked():
            self.config['Btn_second_set']= True
        if self.radioBtn_gate_set.isChecked():
            self.config['Btn_gate_set']= True

    def radio_validator(self):
        self.get_radio_btn_config()
        self.rv_sum=0
        for key, val in self.config.items():
            self.rv_sum=self.rv_sum+val
        if self.rv_sum==2:
            return True
        else:
            return False

        

    def get_file_name(self):
        print ("Генерую назву файла")
        self.part_file_name= f"{self.lnput_part_length.text()}мм {self.lnput_number_of_shtaketins.text()}штак."
        if self.radio_btn_old_gate.isChecked() and not self.radioBtn_second_set.isChecked():
            self.part_file_name=self.part_file_name+' стара хвіртка, '
        if self.radio_btn_new_gate.isChecked() and not self.radioBtn_second_set.isChecked():
            self.part_file_name=self.part_file_name+' нова хвіртка, '
        if self.radioBtn_one_pack.isChecked():
            self.part_file_name=self.part_file_name+'верх, низ, під хвіртку, перило хвіртки'
        if self.radioBtn_gate_up_down.isChecked():
            self.part_file_name=self.part_file_name+"хвіртка, верх та низ"
        if self.radioBtn_main_set.isChecked():
            self.part_file_name=self.part_file_name+"верхи, низи, під хвіртку повна загрузка"
        if self.radioBtn_second_set.isChecked():
            self.part_file_name=self.part_file_name+"верхи й низи повна загрузка"
        if self.radioBtn_gate_set.isChecked():
            self.part_file_name=self.part_file_name+"хвіртки верхи та низи повна загрузка"
        if self.cb.isChecked():
            self.part_file_name=self.part_file_name+", менше 60мм між штакетин"

        return self.part_file_name

    def input_validator(self):
        print ("Перевiряю що ти менi наклацав")
        try:
            if float(self.lnput_part_length.text())>0 and float(self.lnput_number_of_shtaketins.text())>0:
                if float(self.lnput_part_length.text())/float(self.lnput_number_of_shtaketins.text())>40 and self.radio_validator():
                    return True
                else:
                    return False
        except ValueError:
            return False

    def chek_push_button(self):
        self.pushButton.clicked.connect(lambda: self.save_program())


    def chek_ButtonCalculate(self):
        self.ButtonCalculate.clicked.connect(lambda: self.calculate())

    def chek_limit_60(self, lock=False):        
        if self.cb.isChecked():
            lock=True
        if lock:
            self.lnput_number_of_shtaketins.setReadOnly(True)
            self.lnput_number_of_shtaketins.setStyleSheet("background-color: rgb(200, 200, 200);")
        else:
            self.lnput_number_of_shtaketins.setReadOnly(False)
            self.lnput_number_of_shtaketins.setStyleSheet("background-color: rgb(255, 255, 255);")

    def chek_radio_button_gate(self):
        self.radioBtn_gate_up_down.toggled.connect(self.radio_gate_change)
        self.radioBtn_gate_set.toggled.connect(self.radio_gate_change)

    def radio_gate_change(self):
        if self.radioBtn_gate_set.isChecked() or self.radioBtn_gate_up_down.isChecked():
            self.chek_limit_60(lock=True)
        elif not self.radioBtn_gate_set.isChecked() or  not self.radioBtn_gate_up_down.isChecked():
            self.chek_limit_60()


    def calculate(self):
        print ("Роблю попереднi розрахунки")
        self.says_somesing_important()
        if self.cb.isChecked():
            self.shtaketins_if_limit_60()
        step, step_one=self.kernel.get_linear_step(length=float(self.lnput_part_length.text()), limit60=self.cb.isChecked())
        if self.radio_btn_old_gate.isChecked():
            self.l_railing=step*(self.kernel.sthaketin-5)
            self.l_13=step_one+20
            self.gate=float(self.lnput_part_length.text())-self.l_railing-self.l_13-5            
            self.show_calculate_result(step_one, step)
        elif self.radio_btn_new_gate.isChecked():
            self.l_railing=step*(self.kernel.sthaketin-7)
            self.l_13=step_one+20+step
            self.gate=float(self.lnput_part_length.text())-self.l_railing-self.l_13-5            
            self.show_calculate_result(step_one, step)   



    def show_calculate_result(self, step_one, step):
        _translate = QtCore.QCoreApplication.translate
        self.label_detail_13.setText(_translate("MainWindow", f"Деталь №13 {round(self.l_13)}мм, перше сверління на {round(step_one, 1)}мм, міжосьове {round(step, 2)}мм"))
        self.label_lenght_railing.setText(_translate("MainWindow", f"Довжина перила до хвіртки {round(self.l_railing)}мм"))
        self.label_lenght_gate.setText(_translate("MainWindow", f"Довжина хвіртки {round(self.gate)}мм"))
        self.reset_config()

    def shtaketins_if_limit_60(self):
        shtaketins=round(float(self.lnput_part_length.text())/95)
        self.lnput_number_of_shtaketins.setText(str(shtaketins))


    def save_program(self):
        if self.cb.isChecked():
            self.shtaketins_if_limit_60()
        self.calculate()
        print ("Зберiгаю програму")
        self.save.save_cp()
        print ("Програму збережено")

    def reset_config(self):
        self.config={'btn_old_gate': False, 'btn_new_gate': False, 'Btn_one_pack': False, 
            'Btn_gate_up_down': False, 'Btn_main_set': False, 'Btn_second_set': False, 
            'Btn_gate_set': False}



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
